Perl正则表达式基本
==================

元字符.
------------
1. 元字符.表示 **任意一个字符**
2. . **不能匹配换行符**
3. 新版本Perl **\N** 也可以达到如此效果
4. 匹配真正的任意字符 **请使用[\d\D]** 

元字符\
------------
1. 元字符\表示 **转义**
2. 例如，\.表示 **真正的.**
3. \\表示真正的 **反斜杠**

元字符?
------------
1. 元字符?表示前一个字符 **可有可无**
2. 例如，/ac?b/能匹配 **ab和acb**
3. 默认只 **对前一个字符** 生效

元字符+
------------
1. 元字符+表示前一个字符 **出现任意次**
2. 但前一个字符 **至少出现一次**
3. 例如，/ac+b/能匹配 **acb和accb** ，但 **无法匹配ab**
4. 同?，默认 **对前一个字符** 生效

元字符*
------------
1. 元字符*表前一个字符 **出现任意次**
2. 与+不同 **允许出现0次**
3. 例如，/ac*b/能 **匹配acb和accb** ，同时也 **能匹配ab**
4. 同+和?，默认 **对前一个字符** 生效

花括号对{}
------------
1. 在一些 **转义字符** 后使用， **如\g{}** ，不做详细介绍
2. {a,b}表示前一个字符出现 **a次到b次**
3. 省略 **,b** 表示前一个字符 **出现a次**
4. 省略b表示前一个字符 **出现至少a次**
5. 省略a表示前一个字符 **出现至多b次**
6. 一样默认只 **对前一个字符** 生效

小括号对()
------------
1. 让+*?{} **对一组字符** 生效
2. 例如ab+ **匹配abb无法匹配abab** ，(ab)+ **匹配abab无法匹配abb**
3. 括号内作为 **捕获分组**

反向引用\g{}
------------
1. 一般用法 **\g{1 ~ 9}或\g{-1 ~ -9}** 
2. {} **跟正数** 时，表示 **从左往右数** 的第几个
3. 跟 **正数** 时，**知道哪个** 捕获分组想要知道 **跟几** ，只需要数到那里 **出现几个左括号** （ **包括该捕获分组的** ）即可
4. 跟 **负数** 时，表示 **从右往左数的** 第几个
5. \g{1}可以 **简写为\g1或\1** ，**以此类推**

择一匹配|
------------
1. **一般用法** a|b(|...)
2. **默认是全部择一** ，例如abcde|fg代表在abcde和fg中选择一个
3. 可以 **用小括号()** 界定择一的范围

字符集[]
------------
1. 一般用法 **类似[abcdefg]**
2. 字符集内.就是 **普通的.**
3. 字符集内可以 **使用连字符-** ，例如，[a-e] **等同于[abcde]**
4. 字符集内的 **-可以多个** ，例如，[a-e1-3]等同于[abcde123]
5. 脱字符^ **代表不包含** ，[^def]代表 **除了 d e f 之外** 的任何字符

特殊字符集1
------------
1. **\d** 代表十进制数字
2. **\s** 代表空白字符 
3. **\h** 代表水平空白字符
4. **\v** 代表垂直空白字符
5. **\w** 代表“单词”字符
6. **\n** 代表换行符
7. **\p{PROPERTY}** 代表Unicode字符属性

特殊字符集2
------------
1. \d \s \h 等特殊字符集的 **大写形式表示非** 
2. 例如，\D **等同于[^\d]** 
3. []内可以出现 **多个字符集** ，例如[\d\s]匹配 **数字和空白字符**
4. 同理，[\d\D]表示 **匹配任意字符**

